<?php

/*
 * Bryce Schmisseur and Hermes Mimini
 * Job Match Application
 * UserBusinessService.php
 *
 */

namespace App\business;

use App\model\User;
use App\data\UserDataService;

class UserBusinessService implements BusinessServiceInterface{
    
    private $dataService;
    
    public function __construct()
    {
        $this->dataService = new UserDataService();
    }
    
    public function authenticate(User $user)
    {
        $users = $this->dataService->viewAll();
        $userName = $user->getUserCredential()->getUserName();
        $password = $user->getUserCredential()->getPassword(); 
        $validUser = false;
        
        for($i = 0; $i < count($users); $i++)
        {
            $currentUser = $usersList[$i];
            $currentUserName = $currentUser->getUserCredential()->getUserName();
            $currentPassword = $currentUser->getUserCredential()->getPassword();
            
            if(strcmp($currentUser->getUserName(), $user->getUserName()) == 0 )
        }
    }

    public function viewById(int $id)
    {
        return $this->dataService->viewById($id);
    }

    public function create(User $user)
    {
        return $this->dataService->create($user);
    }

    public function update(User $user)
    {
        return $this->dataService->update($user);
    }

    public function delete(int $id)
    {
        return $this->dataService->delete($id);
    }

    public function viewAll()
    {
        return $this->dataService->viewAll();
    }

   
    
}